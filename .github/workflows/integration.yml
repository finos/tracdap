name: Integration

on:

  # Integration tests always run on pull requests
  pull_request:

  # Re-run integration tests in main, to make sure there are no issues from the merge
  push:
    branches:
      - main

  # Allow manual triggering of integration tests
  workflow_dispatch:


# Use baseline language versions for integration builds
env:
  JAVA_VERSION: 11
  JAVA_DISTRIBUTION: zulu
  PYTHON_VERSION: "3.10"


jobs:

  slow-tests:

    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:

      # fetch-depth = 0 is needed to get tags for version info
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: gradle

      - name: Build
        run: ./gradlew build -x test

      - name: Slow tests
        run: ./gradlew integration -DintegrationTags="slow"

      # If the tests fail, make the output available for download
      - name: Store failed test results
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: junit-test-results
          path: build/modules/*/reports/**
          retention-days: 7


  end-to-end:

    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:

      # fetch-depth = 0 is needed to get tags for version info
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Java - Setup
        uses: actions/setup-java@v3
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}

          # Turn on Gradle dependency caching
          cache: gradle

      - name: Java - Build platform
        run: ./gradlew build -x test

      - name: Python - setup
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Python - PIP
        run: python -m pip install --upgrade pip

      - name: Python - Install build dependencies
        run: |
          pip install -r tracdap-runtime/python/requirements.txt

      - name: Python - Build runtime package
        run: python tracdap-runtime/python/build_runtime.py --target codegen dist

      - name: Run end to end tests
        run: ./gradlew integration -DintegrationTags="int-e2e"

      # If the tests fail, make the output available for download
      - name: Store failed test results
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: junit-test-results
          path: build/modules/*/reports/**
          retention-days: 7


  int-metadb:

    runs-on: ubuntu-latest

    container:
      image: ubuntu:latest

    strategy:

      # Try to finish all jobs - it can be helpful to see if some succeed and others fail
      fail-fast: false

      matrix:

        database:

          - { DB_NAME: MySQL,
              DB_IMAGE: 'mysql:8.0',
              DB_PORT: 3306,
              DB_OPTIONS: '--health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3',
              BUILD_sql_mysql: true,
              TRAC_CONFIG_FILE: '.github/config/trac-int-mysql.yaml',
              MYSQL_DATABASE: trac,
              MYSQL_USER: trac_admin,
              MYSQL_PASSWORD: trac_admin,
              MYSQL_ALLOW_EMPTY_PASSWORD: yes }

          - { DB_NAME: MariaDB,
              DB_IMAGE: 'mariadb:10.5',
              DB_PORT: 3306,
              DB_OPTIONS: '--health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3',
              BUILD_sql_mariadb: true,
              TRAC_CONFIG_FILE: '.github/config/trac-int-mariadb.yaml',
              MYSQL_DATABASE: trac,
              MYSQL_USER: trac_admin,
              MYSQL_PASSWORD: trac_admin,
              MYSQL_ALLOW_EMPTY_PASSWORD: yes }

          - { DB_NAME: PostgreSQL,
              DB_IMAGE: 'postgres:10.19-alpine',
              DB_PORT: 5432,
              DB_OPTIONS: '--health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5',
              BUILD_sql_postgresql: true,
              TRAC_CONFIG_FILE: '.github/config/trac-int-postgresql.yaml',
              POSTGRES_DB: trac,
              POSTGRES_USER: trac_admin,
              POSTGRES_PASSWORD: trac_admin }

          - { DB_NAME: SQLServer,
              DB_IMAGE: 'mcr.microsoft.com/mssql/server:2019-latest',
              DB_PORT: 1433,
              DB_OPTIONS: '-e "NO_DB_OPTIONS=not_used"',  # docker run -e flag sets an env variable, passing '' causes errors
              BUILD_sql_sqlserver: true,
              TRAC_CONFIG_FILE: '.github/config/trac-int-sqlserver.yaml',
              MSSQL_PID: Developer,
              ACCEPT_EULA: Y,
              SA_PASSWORD: "tR4c_aDm!n" }

    env: ${{ matrix.database }}

    services:

      metadb:

        image: ${{ matrix.database.DB_IMAGE }}
        env: ${{ matrix.database }}
        ports:
          - ${{ matrix.database.DB_PORT }}:${{ matrix.database.DB_PORT }}
        options: ${{ matrix.database.DB_OPTIONS }}

    steps:

      # fetch-depth = 0 is needed to get tags for version info
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: gradle

      - name: Build
        run: ./gradlew trac-svc-meta:build trac-svc-meta:testClasses deploy-metadb:build -x test

      - name: Prepare Database
        run: |
          ./gradlew deploy-metadb:run --args="\
          --config ${{ matrix.database.TRAC_CONFIG_FILE }} \
          --task deploy_schema \
          --task add_tenant:ACME_CORP"

      - name: Integration Tests
        run: ./gradlew integration -DintegrationTags="int-metadb"

      # If the tests fail, make the output available for download
      - name: Store failed test results
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: junit-test-results
          path: build/modules/*/reports/**
          retention-days: 7
