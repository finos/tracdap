name: Packaging

on:
  push:

  pull_request:

  release:
    types:
      - created

  # Allow manual triggering of the packaging jobs
  workflow_dispatch:


env:
  PYTHON_VERSION: "3.9"
  NODE_VERSION: "14.x"


jobs:

  python_runtime_package:

    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: PIP Upgrade
        run: python -m pip install --upgrade pip

      # fetch-depth = 0 is needed to get tags for version info
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install build environment dependencies
        run: |
          pip install -r dev/requirements.txt

      - name: Protoc code generation
        run: |
          python dev/codegen/protoc-ctrl.py python_runtime --proto_path trac-api/trac-metadata/src/main/proto --out trac-runtime/python/generated/trac/rt_gen/domain
          python dev/codegen/protoc-ctrl.py python_proto --proto_path trac-api/trac-metadata/src/main/proto --out trac-runtime/python/generated/trac/rt_gen/proto

      - name: Build packages
        run: |
          cd trac-runtime/python
          python package-ctrl.py

      - name: Save artifacts
        uses: actions/upload-artifact@v2
        with:
          name: trac-packages
          path: trac-runtime/python/build/dist
          retention-days: 1


  web_api_package:

    runs-on: ubuntu-latest

    steps:

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      # fetch-depth = 0 is needed to get tags for version info
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          cd trac-api/packages/web
          npm install

      - name: Set TRAC version
        run: |
          cd trac-api/packages/web
          npm run tracVersion:posix

      - name: PBJS code generation
        run: |
          cd trac-api/packages/web
          npm run pbjs
          npm run pbts

      - name: Create tarball
        run: |
          cd trac-api/packages/web
          mkdir dist
          cd dist
          npm pack ..

      - name: Save artifacts
        uses: actions/upload-artifact@v2
        with:
          name: trac-packages
          path: trac-api/packages/web/dist
          retention-days: 1


  publish_to_github:

    if: ${{ github.event.release.created }}

    runs-on: ubuntu-latest

    needs:
      - python_runtime_package
      - web_api_package

    steps:

      # fetch-depth = 0 is needed to get tags for version info
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Fetch all packages
        uses: actions/download-artifact@v2
        with:
          name: trac-packages
          path: dist/

      - name: Get TRAC version
        id: trac-version
        run: |
          trac_version=`dev/version.sh`
          echo "trac_version = ${trac_version}"
          echo "::set-output name=trac_version::${trac_version}"

      - name: Build dist tarball
        run: tar -cvzf trac-dist-packages-${{ steps.trac-version.outputs.trac_version }} dist/

      - name: Publish release assets
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: trac-dist-packages-${{ steps.trac-version.outputs.trac_version }}
          asset_name: trac-dist-packages-${{ steps.trac-version.outputs.trac_version }}
          asset_content_type: application/gzip
