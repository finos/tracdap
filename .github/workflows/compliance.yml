name: Compliance

on:

  # Run compliance jobs for pull requests, to make sure there are no issues before merging
  pull_request:

  # Re-run compliance jobs in main, to make sure there are no issues from the merge
  push:
    branches:
      - main

  # Use the release:publish event to generate compliance reports for releases
  # This lines up with the packaging workflow, so reports will be published when packages are published
  release:
    types:
      - published

  # Allow manual triggering of the compliance jobs
  workflow_dispatch:


# Use baseline language versions for compliance builds
env:
  JAVA_VERSION: 11
  JAVA_DISTRIBUTION: zulu
  NODE_VERSION: 14.x


jobs:

  java_compliance:

    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:

      # fetch-depth = 0 is needed to get tags for version info
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: gradle

      # Use a cache to save downloading the whole NVD on every build
      # Dependency check will automatically look for updates and download the delta
      - name: NVD cache
        uses: actions/cache@v2
        with:
          key: compliance-cache-data
          path: ./build/compliance-cache

      - name: OWASP dependency check
        run: ./gradlew dependencyCheckAggregate

      - name: License check
        run: ./gradlew checkLicense

      # Always save the reports - they are especially needed when the checks have failed!
      - name: Store compliance reports
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: compliance-reports
          path: build/compliance/**

  web_api_compliance:

    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:

      # fetch-depth = 0 is needed to get tags for version info
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          cache-dependency-path: trac-api/packages/web/package-lock.json

      # Use a cache to save downloading global compliance data on every build (e.g. NVD)
      # Compliance tasks will automatically look for updates and download deltas
      - name: NVD cache
        uses: actions/cache@v2
        with:
          key: compliance-cache-data
          path: ./build/compliance-cache

      - name: Install dependencies
        run: |
          cd trac-api/packages/web
          npm install

      - name: OWASP dependency check
        run: |
          mkdir -p build/compliance
          cd trac-api/packages/web
          npm run compliance-owasp

      - name: License check
        run: |
          cd trac-api/packages/web
          npm run compliance-licenses

      - name: NPM audit
        run: |
          mkdir -p build/compliance/web-api-npm-audit
          cd trac-api/packages/web
          npm run compliance-audit

      # Always save the reports - they are especially needed when the checks have failed!
      - name: Store compliance reports
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: compliance-reports
          path: build/compliance/**
