/*
 * Copyright 2020 Accenture Global Solutions Limited
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = 'proto3';
package trac.metadata;

option java_package = "com.accenture.trac.metadata";
option java_multiple_files = true;

import "trac/metadata/type.proto";
import "trac/metadata/data.proto";


/**
 * Describes an individual parameter of a model
 */
message ModelParameter {

    string label = 1;

    TypeDescriptor paramType = 2;

    optional Value defaultValue = 3;
}


/**
 * Describes the data schema of a model input or output
 *
 * In many cases models define the entire schemas of their inputs and outputs, in which case
 * the model data schema is just a wrapper around a schema definition. This is what is
 * supported now.
 *
 * There are other ways for models to describe data schemas. Dynamic schemas for inputs or
 * outputs (i.e. the schema is supplied / defined at runtime), pass-through schemas (output
 * X has the same schema as dynamic input Y) and pass-through-extend schemas (output X has
 * the schema of dynamic input Y, plus one or more new columns). These capabilities may be
 * added in future releases.
 */
message ModelDataSchema {

    SchemaDefinition schema = 1;
}


/**
 * Define a model for execution on the TRAC platform
 */
message ModelDefinition {

    string language = 1;
    string repository = 2;
    string repositoryVersion = 3;
    string path = 4;
    string entryPoint = 5;

    map<string, ModelParameter> params = 6;
    map<string, ModelDataSchema> inputs = 7;
    map<string, ModelDataSchema> outputs = 8;
}
