/*
 * Licensed to the Fintech Open Source Foundation (FINOS) under one or
 * more contributor license agreements. See the NOTICE file distributed
 * with this work for additional information regarding copyright ownership.
 * FINOS licenses this file to you under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with the
 * License. You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id "java"
    id "distribution"
}

description = "SQL drivers plugin (placeholder, not required for production builds)"

// Put plugins into a separate package group
group = "org.finos.tracdap.plugins"

// Use a different build dir (don't include plugins in the main release package)
project.buildDir = rootProject.buildDir.path + '/plugins/' + project.name

repositories {
    mavenCentral()
}

// Pull in source sets and dependencies for the individual drivers
apply from: "drivers.gradle"
apply from: "flyway.gradle"

distributions {
    main {
        contents {

            // Only redistribute drivers with FINOS Category A licenses for now
            // https://community.finos.org/docs/governance/software-projects/license-categories/

            into("h2") {
                from(configurations["h2RuntimeClasspath"])
                from("dist/h2")
            }

            into("h2-compat") {
                from(configurations["h2CompatRuntimeClasspath"])
                from("dist/h2")
            }

            into("mysql") {
                from(configurations["mysqlRuntimeClasspath"])
                from("dist/mysql")
            }

            into("postgresql") {
                from(configurations["postgresqlRuntimeClasspath"])
            }

            into("sqlserver") {
                from(configurations["sqlserverRuntimeClasspath"])
            }
        }
    }
}
