/*
 * Licensed to the Fintech Open Source Foundation (FINOS) under one or
 * more contributor license agreements. See the NOTICE file distributed
 * with this work for additional information regarding copyright ownership.
 * FINOS licenses this file to you under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with the
 * License. You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = 'proto3';
package tracdap.metadata;

option java_package = "org.finos.tracdap.metadata";
option java_multiple_files = true;

import "tracdap/metadata/type.proto";
import "tracdap/metadata/object_id.proto";
import "tracdap/metadata/resource.proto";


/**
 * Represents the mapping of a config key to a config object.
 */
message ConfigEntry {

  /// Config class for this config entry.
  string configClass = 1;

  /// Config key for this config entry.
  string configKey = 2;

  /// Version of the config entry.
  int32 configVersion = 3;

  /// Timestamp for when this version of the config entry was created.
  DatetimeValue configTimestamp = 4;

  /// Flag indicating whether this is the latest version of the config entry.
  bool isLatestConfig = 5;

  /// Flag indicating whether this config entry has been deleted.
  bool configDeleted = 6;

  /// Describes the content of this config entry, can be used for list / summary views (optional).
  optional ConfigDetails details = 7;
}


/**
 * Enumeration of available config types
 */
enum ConfigType {

  CONFIG_TYPE_NOT_SET = 0;

  /// A key-value properties map, follows the convention used for .properties files
  PROPERTIES = 1;
}


/**
 * Summary content of a config entry.
 *
 * @see ConfigEntry
 */
message ConfigDetails {

  /// Selector for the metadata object holding the content of this config entry.
  metadata.TagSelector objectSelector = 1;

  /// Type of the metadata object referred to by this config entry.
  ObjectType objectType = 2;

  /// Indicate the config type (for CONFIG objects only)
  optional ConfigType configType = 3;

  /// Indicate the resource type (for RESOURCE objects only)
  optional ResourceType resourceType = 4;
}


/**
 * Definition of an individual config entry
 */
message ConfigDefinition {

  /// The type of this config entry
  ConfigType configType = 1;

  /// The map of config properties (only available for PROPERTIES config entries)
  map<string,string> properties = 2;
}
