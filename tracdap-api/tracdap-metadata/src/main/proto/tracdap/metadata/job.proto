/*
 * Copyright 2020 Accenture Global Solutions Limited
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = 'proto3';
package tracdap.metadata;

option java_package = "org.finos.tracdap.metadata";
option java_multiple_files = true;

import "tracdap/metadata/type.proto";
import "tracdap/metadata/object_id.proto";
import "tracdap/metadata/tag_update.proto";


/**
 * Specify the type of an individual TRAC job
 */
enum JobType {
  JOB_TYPE_NOT_SET = 0;

  /// Run a single model, with parameters and inputs
  RUN_MODEL = 1;

  /// Run a flow with all its models, parameters and inputs
  RUN_FLOW = 2;

  /// Import a model into the platform
  IMPORT_MODEL = 3;

  /// Import data into the platform
  IMPORT_DATA = 4;

  /// Export data to external locations
  EXPORT_DATA = 5;
}

/**
 * Indicate the status of a job in the TRAC platform
 */
enum JobStatusCode {

  JOB_STATUS_CODE_NOT_SET = 0;

  /// The job is being set up
  PREPARING = 1;

  /// The job has passed validation and is ok to run (dry-run operations may return this status)
  VALIDATED = 2;

  /// The job is being set up
  PENDING = 3;

  /// The job is queued in TRAC, waiting for available resources
  QUEUED = 4;

  /// The job has been submitted for execution but has not yet started
  SUBMITTED = 5;

  /// The job is currently running
  RUNNING = 6;

  /// Job execution completed, the platform is cleaning up and validating the outputs
  FINISHING = 7;

  /// The job completed successfully and the results are available
  SUCCEEDED = 8;

  /// The job failed and has been terminated or rejected
  FAILED = 9;

  /// The job was cancelled by a user of the platform
  CANCELLED = 10;
}

/**
 * Define a job to run on the TRAC platform
 */
message JobDefinition {

  JobType jobType = 1;

  oneof jobDetails {
    RunModelJob runModel = 2;
    RunFlowJob runFlow = 3;
    ImportModelJob importModel = 4;
    ImportDataJob importData = 5;
    ExportDataJob exportData = 6;
  }
}

/**
 * Specification for a RuN_MODEL job
 */
message RunModelJob {

  TagSelector model = 1;

  map<string, Value> parameters = 2;
  map<string, TagSelector> inputs = 3;
  map<string, TagSelector> outputs = 4;
  map<string, TagSelector> priorOutputs = 5;

  repeated TagUpdate outputAttrs = 6;
}

/**
 * Specification for a RUN_FLOW job
 */
message RunFlowJob {

  TagSelector flow = 1;

  map<string, Value> parameters = 2;
  map<string, TagSelector> inputs = 3;
  map<string, TagSelector> outputs = 4;
  map<string, TagSelector> priorOutputs = 5;
  map<string, TagSelector> models = 6;

  repeated TagUpdate outputAttrs = 7;
}

/**
 * Specification for an IMPORT_MODEL job
 */
message ImportModelJob {

  string language = 1;
  string repository = 2;

  optional string packageGroup = 7;
  string package = 8;
  string version = 5;

  string entryPoint = 4;

  string path = 3;

  repeated TagUpdate modelAttrs = 6;
}

/**
 * Specification for an IMPORT_DATA job
 */
message ImportDataJob {

  TagSelector model = 1;

  map<string, Value> parameters = 2;
  map<string, TagSelector> inputs = 3;
  map<string, TagSelector> outputs = 4;
  map<string, TagSelector> priorOutputs = 5;

  repeated string storageAccess = 6;
  map<string, TagSelector> imports = 7;

  repeated TagUpdate outputAttrs = 8;
  repeated TagUpdate importAttrs = 9;
}

/**
 * Specification for an EXPORT_DATA job
 */
message ExportDataJob {

  TagSelector model = 1;

  map<string, Value> parameters = 2;
  map<string, TagSelector> inputs = 3;
  map<string, TagSelector> outputs = 4;
  map<string, TagSelector> priorOutputs = 5;

  repeated string storageAccess = 6;
  map<string, TagSelector> exports = 7;

  repeated TagUpdate outputAttrs = 8;
}
