/*
 * Licensed to the Fintech Open Source Foundation (FINOS) under one or
 * more contributor license agreements. See the NOTICE file distributed
 * with this work for additional information regarding copyright ownership.
 * FINOS licenses this file to you under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with the
 * License. You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = 'proto3';
package tracdap.config;

option java_package = "org.finos.tracdap.config";
option java_outer_classname = "PlatformConfigProto";
option java_multiple_files = true;

import "tracdap/metadata/common.proto";
import "tracdap/config/common.proto";
import "tracdap/config/tenant.proto";

import "google/protobuf/any.proto";


message PlatformConfig {

  map<string, string> config = 1;
  PlatformInfo platformInfo = 2;

  PluginConfig metadataStore = 3;
  PluginConfig jobCache = 4;
  PluginConfig executor = 5;

  map<string, ServiceConfig> services = 10;
  DeploymentConfig deployment = 11;
  GatewayConfig gateway = 12;

  map<string, google.protobuf.Any> extensions = 20;
  map<string, PluginConfig> setupTasks = 21;
}

message GatewayConfig {

  // Idle timeout moved into common service properties
  reserved 1;
  reserved "idleTimeout";

  repeated RouteConfig routes = 2;
  repeated GatewayRedirect redirects = 3;
}

message GatewayRedirect {

  string source = 1;
  string target = 2;
  int32 status = 3;
}

message RouteConfig {

  string routeName = 1;
  RoutingProtocol routeType = 2;
  repeated RoutingProtocol protocols = 3;

  RoutingMatch match = 5;
  RoutingTarget target = 6;

  string routeKey = 7;
}

enum RoutingProtocol {
  PROTOCOL_NOT_SET = 0;
  HTTP = 1;
  GRPC = 2;
  GRPC_WEB = 3;
  REST = 4;
  INTERNAL = 5;
}

message RoutingMatch {
  string host = 1;
  string path = 2;
}

message RoutingTarget {
  string scheme = 1;
  string host = 2;
  uint32 port = 3;
  string path = 4;
  optional string hostAlias = 5;
}

message DeploymentConfig {

  DeploymentLayout layout = 1;
}

enum DeploymentLayout {
  LAYOUT_NOT_SET = 0;
  SANDBOX = 1;
  HOSTED = 2;
  CUSTOM = 3;
}
