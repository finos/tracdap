/*
 * Copyright 2020 Accenture Global Solutions Limited
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id "java-library"
}

apply from: "${rootProject.projectDir.path}/gradle/base-java.gradle"


description = "TRAC D.A.P. data library, interfaces and core functionality for working with primary data"

dependencies {

    api project(':tracdap-api-config')
    api project(':tracdap-lib-common')

    // Data framework API is in terms of Apache Arrow
    api group: 'org.apache.arrow', name: 'arrow-vector', version: "$arrow_version"
    api group: 'org.apache.arrow', name: 'arrow-memory-netty', version: "$arrow_version"

    // Jackson used for implementations of formats included as standard
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: "$jackson_version"
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: "$jackson_databind_version"
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-csv', version: "$jackson_version"

    testImplementation project(':tracdap-lib-test')
}


// Compiling dependent targets does not require processResources to be executed by default
// E.g. running tests from the IDE will not trigger processResources - this can cause confusion!
// This dependency ensures resources are always processed, even for partial builds

compileJava.dependsOn(processResources)
