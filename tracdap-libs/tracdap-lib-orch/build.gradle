/*
 * Copyright 2022 Accenture Global Solutions Limited
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id "java-library"
    id "com.google.protobuf"
}

apply from: "${rootProject.projectDir.path}/gradle/base-java.gradle"


description = "TRAC D.A.P. orchestration library, interfaces and core functionality for job orchestration"

dependencies {

    api project(':tracdap-api-metadata')
    api project(':tracdap-api-config')
    api project(':tracdap-api-services')
    api project(':tracdap-lib-common')

    testImplementation project(':tracdap-lib-test')
}

protobuf {

    protoc {
        artifact = "com.google.protobuf:protoc:$proto_version"
    }

    generateProtoTasks.generatedFilesBaseDir = "${project.buildDir}/generated-sources"

    generateProtoTasks {
        //noinspection GroovyAssignabilityCheck
        all().each { task -> task.builtins { java {} } }
    }
}

sourceSets {
    main {
        java {
            // Include generated code from protoc
            // Including the proto src dir lets autocomplete work in the IDE
            srcDirs "${project.buildDir}/generated-sources/main/java"
            srcDirs "${projectDir}/src/main/proto"
        }
    }
}



// Compiling dependent targets does not require processResources to be executed by default
// E.g. running tests from the IDE will not trigger processResources - this can cause confusion!
// This dependency ensures resources are always processed, even for partial builds

compileJava.dependsOn(processResources)
